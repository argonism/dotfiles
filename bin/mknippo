#! env python3
import datetime
import pathlib
import typing


HEADINGS = ['Done', 'Work in Progress', 'Todo', 'Trouble', 'TIL']
HEADINGS_NEEDED_TAKE_OVER = ['Work in Progress', 'Todo']


def format_datetime(datetime: datetime.datetime,
                    with_extension: bool = True):
    datetime_str = datetime.strftime('%Y:%m:%d')
    if with_extension:
        return datetime_str + '.md'
    else:
        return datetime_str


def extract_previous_entries(nippo_text: str, entry: str):
    in_state = False
    previous_entries = ''
    entry_key = '## ' + entry

    for line in nippo_text.split('\n'):
        if entry_key in line:
            in_state = True
            continue

        if in_state:
            previous_entries += line + '\n'

        if in_state and line == '':
            break

    previous_entries = previous_entries.rstrip('\n')
    return previous_entries


def create_nippo(previous_entries: typing.Dict[str, str]):
    nippo_text = ''
    for heading in HEADINGS:
        nippo_text += '## ' + heading + '\n'
        if heading in previous_entries:
            previous_text = previous_entries[heading]
            nippo_text += previous_text + '\n'

        nippo_text += '- \n'
        nippo_text += '\n'

    nippo_text = nippo_text.rstrip('\n')
    return nippo_text


if __name__ == '__main__':
    today = datetime.datetime.now()
    today_string = format_datetime(today)
    today_nippo_path = pathlib.Path(today_string)

    if today_nippo_path.exists():
        print('You have already written nippo!')
        exit()

    # tack the previous nippo
    previous_entries = {}
    for delta_ in range(1, 31):
        delta = datetime.timedelta(days=delta_)
        previous_day = today - delta
        previous_day_string = format_datetime(previous_day)
        previous_day_path = pathlib.Path(previous_day_string)
        if previous_day_path.exists():
            print('Found the previous nippo')

            with open(previous_day_path) as previous_nippo_file:
                previous_nippo = previous_nippo_file.read()
                for heading in HEADINGS_NEEDED_TAKE_OVER:
                    tmp_ = extract_previous_entries(previous_nippo, heading)
                    previous_entries[heading] = tmp_
            break

    today_nippo_text = '# ' + format_datetime(today) + '\n'
    today_nippo_text += create_nippo(previous_entries)
    with open(today_nippo_path, 'w') as today_nippo:
        print(today_nippo_text, file=today_nippo)
    print('created: ' + today_nippo_path.as_posix())
