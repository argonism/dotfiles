#! env python3
import os
import sys
import argparse

ABS_DIR = os.path.dirname(os.path.abspath(__file__))

parser = argparse.ArgumentParser()
parser.add_argument('name', type=str, help='name of the latex repository')
parser.add_argument('--beamer', '-b', action='store_true')
parser.add_argument('--double-column', '-d', action='store_true')
args = parser.parse_args()
if not args.name:
    exit("You have to specify the name")

if os.path.isdir(args.name):
    sys.exit('directory {} exists.'.format(args.name))

if os.path.isfile(args.name):
    sys.exit('file {} exists.'.format(args.name))

print('mkdir {}'.format(args.name))
os.mkdir(args.name)


print('create main.tex')
if args.beamer:
    document_template_fpath = '../template/mklatex/slide.tex'

else:
    if args.double_column:
        document_template_fpath = '../template/mklatex/double.tex'

    else:
        document_template_fpath = '../template/mklatex/single.tex'

document_template_fpath = os.path.join(ABS_DIR, document_template_fpath)
DOCUMENT = open(document_template_fpath).read()
document_fpath = os.path.join(args.name, 'main.tex')

template_makefile_fpath = os.path.join(ABS_DIR, '../template/mklatex/Makefile')
MAKEFILE = open(template_makefile_fpath).read()
makefile_fpath = os.path.join(args.name, 'Makefile')

reference_template_fpath = os.path.join(ABS_DIR, '../template/mklatex/reference.bib')  # NOQA
REFERENCE = open(reference_template_fpath).read()
reference_fpath = os.path.join(args.name, 'reference.bib')

with open(makefile_fpath, 'w') as makefile_fp,\
     open(document_fpath, 'w') as document_fp,\
     open(reference_fpath, 'w') as reference_fp:

    print(DOCUMENT, file=document_fp)
    print(MAKEFILE, file=makefile_fp)
    print(REFERENCE, file=reference_fp)
