#
# .zshrc - The zsh configuration
#

bindkey -e

autoload -U compinit
zstyle ':completion:*:default' menu select=1

setopt auto_cd correct
setopt auto_param_keys
setopt auto_param_slash
setopt complete_in_word
setopt extended_history share_history
setopt magic_equal_subst
setopt mark_dirs
setopt no_beep

function ls () {
  case ${OSTYPE} in
    darwin*)
      command ls -G $@ ;;
    linux*)
      command ls --color $@ ;;
  esac
}

function cd () {
  builtin cd $@ && ls
}

export EDITOR=vim
export GHQ_ROOT=$HOME/work
export GOPATH=$HOME/go
export HISTFILE=$HOME/.zsh-history
export HISTSIZE=100000
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export PYTHONDONTWRITEBYTECODE=1
export SAVEHIST=100000
export XDG_CONFIG_HOME=$HOME/.config
export ZPLUG_HOME=$HOME/.config/zplug
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=241"

if [ "$COLORTERM" = "gnome-terminal" ]; then export TERM=xterm-256color; fi
if [ "$COLORTERM" = "xfce4-terminal" ]; then export TERM=xterm-256color; fi
if [ "$COLORTERM" = "rxvt-xpm" ]; then export TERM=rxvt-256color; fi

for prefix in /usr/local $HOME/.linuxbrew /home/linuxbrew/.linuxbrew /opt/brew; do
  export PATH=$prefix/bin:$PATH
  export PATH=$prefix/sbin:$PATH
done

for prefix in $HOME/.local $HOME/dotfiles $BREW_HOME/opt/llvm $GOPATH; do
  export PATH=$PATH:$prefix/bin
done

if command -v brew > /dev/null; then
  export BREW_HOME=$(brew --prefix)
  export PYTHONSYSTEMPATH=$BREW_HOME/bin/python3
else
  export PYTHONSYSTEMPATH=$(which python3)
fi

if command -v rbenv > /dev/null; then
  eval "$(rbenv init -)"
fi

if command -v nvidia-smi > /dev/null; then
  export PATH=/usr/local/cuda/bin:$PATH
  export LD_LIBRARY_PATH=~/.cudnn/active/cuda/lib64:$LD_LIBRARY_PATH
  export CPATH=~/.cudnn/active/cuda/include:$CPATH
  export LIBRARY_PATH=~/.cudnn/active/cuda/lib64:$LIBRARY_PATH
fi

if command -v nvim > /dev/null; then
  function vim () {
    nvim $@
  }

  export EDITOR=nvim
fi

if command -v tmux > /dev/null; then
  function attach_or_create_tmux_session () {
    if [ ! -z $DISABLE_TMUX ]; then return; fi
    if [ ! -z $TMUX_PANE ]; then return; fi
    if [ "$TERM_PROGRAM" = "vscode" ]; then return; fi
    if tmux has-session; then tmux attach; else tmux; fi
  }

  function ssh () {
    if [ "$(ps -p $(ps -p $$ -o ppid=) -o comm=)" = "tmux" ]; then
      tmux rename-window ${@: -1}
      command ssh "$@"
      tmux set-window-option automatic-rename "on" 1>/dev/null
    else
      command ssh "$@"
    fi
  }

  attach_or_create_tmux_session
fi

if command -v fzf > /dev/null; then
  function fzf-change-dir () {
    local target=$(find ${1:-.} -path '*/\.*' -prune -o -type d -print 2> /dev/null | fzf +m)
    if [ "$target" != "" ]; then cd $target; fi
  }

  function fzf-z-search () {
    local target=$(z | sort -rn | cut -c 12- | fzf)
    if [ "$target" != "" ]; then cd $target; fi
  }

  function fzf-select-history () {
    BUFFER=$(history -n -r 1 | fzf --no-sort +m --query "$LBUFFER" --prompt="History > ")
    CURSOR=$#BUFFER
  }

  bindkey '^t' fzf-change-dir
  bindkey '^j' fzf-z-search
  bindkey '^r' fzf-select-history

  zle -N fzf-change-dir
  zle -N fzf-select-history
  zle -N fzf-z-search
fi

if [ -e $ZPLUG_HOME/init.zsh ]; then
  source $ZPLUG_HOME/init.zsh

  zplug "himkt/zsh-git-prompt", use:"zsh-git-prompt.zsh"
  zplug "rupa/z", use:"z.sh"
  zplug "stedolan/jq", from:gh-r, as:command, rename-to:jq
  zplug "tarruda/zsh-autosuggestions", use:"zsh-autosuggestions.zsh"
  zplug "zsh-users/zsh-history-substring-search"
  zplug "zsh-users/zsh-syntax-highlighting", defer:2

  # check whether if there are packages which it can install
  if ! zplug check --verbose; then
    zplug install
  fi

  zplug load
fi
